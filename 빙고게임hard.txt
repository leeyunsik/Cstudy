#include<iostream>
using namespace std;
#include<time.h>

enum AI_MODE {
	AM_EASY=1,
	AM_HARD
};

enum LINE_NUMBER
{

	LN_H1,
	LN_H2,
	LN_H3,
	LN_H4,
	LN_H5,
	LN_V1,
	LN_V2,
	LN_V3,
	LN_V4,
	LN_V5,
	LN_LT,
	LN_RT
};
int main() {
	srand((unsigned)time(0));
	int iNumber[25] = {};
	int iAINumber[25] = {};
	for (int i = 0; i < 25; ++i) {
		iNumber[i] = i + 1;
		iAINumber[i] = i + 1;

	}

	


	int iTemp, idx1, idx2;
	for (int i = 0; i < 100; ++i) {
		idx1 = rand() % 25;
		idx2 = rand() % 25;

		iTemp = iNumber[idx1];
		iNumber[idx1] = iNumber[idx2];
		iNumber[idx2] = iTemp;

		//AI 숫자도 섞어준다.
		idx1 = rand() % 25;
		idx2 = rand() % 25;

		iTemp = iAINumber[idx1];
		iAINumber[idx1] = iAINumber[idx2];
		iAINumber[idx2] = iTemp;


	}	
	

	
	int Bing=0 ,AIBing=0; int iAIMode;

	//Ai 난이도 선택
	while (true) {
		system("cls");
		cout << "1.easy" << endl;
		cout << "2.hard" << endl;
		cout << "ai 모드를 선택하세요 : "; 
		
		cin >> iAIMode;

		if (iAIMode >= AM_EASY && iAIMode <= AM_HARD)
			break;
	}
	

	/*
	AI Easy 모드는 현재 AI 의 숫자목록중 *로 바뀌지 않은 숫자
	목록을 만들어서그 목록중 하나를 선택하게한다 (랜덤하게)
	*/

	//선택안된 목록 배열을 만들어준다.

	int iNoneSelect[25] = {};
	//선택안된 숫자 개수를 저장한다.
	int iNoneSelectCount = 0;
	while (true) {
		system("cls");

		//숫자를 5x5로 출력한다.
		cout << "=======================Player" << endl;
		for (int i = 0; i < 5; ++i) {
			for (int j = 0; j < 5; ++j) {
				if (iNumber[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << iNumber[i * 5 + j] << "\t";
			}
			cout << endl;
			
		}
		
		cout << "Bingoline: " << Bing << endl<<endl;

		//AI빙고 판을 출력한다.

		cout << "=======================AI" << endl;
		if (iAIMode == 1)
			cout << "AiMode : easy" << endl;
		else
			cout << "AiMode : hard" << endl;
		for (int i = 0; i < 5; ++i) {
			for (int j = 0; j < 5; ++j) {
				if (iAINumber[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << iAINumber[i * 5 + j] << "\t";
			}
			cout << endl;
		}

		//Ai빙고 줄수를 출력한다.
		cout << "AiBingo Line " << AIBing << endl;

		if (Bing >= 5) {
			cout << "플레이어 승리" << endl;
			break;
		}
		else if (AIBing >= 5) {
			cout << "AI 승리" << endl;
		}
		cout << "숫자를 입력하시오(0 :종료)";
		int iInput;
		cin >> iInput;

		if (iInput == 0) {
			break;
		}
		else if (AIBing >= 5) {

		}
		else if (iInput < 1 || iInput>25)
			continue;

		//중복입력을 체크하기 위한 변수이다. 기본적으로 중복되었다라고 
		//하기위해 true값을 준다.
		bool bAcc = true;

		//모든숫자를 차례대로 검사해서 입력한 숫자와 같은 숫자가
		//있는지를 찾아낸다.
		for (int i = 0; i < 25; ++i) {
			if (iInput == iNumber[i]) {
				bAcc = false;

				iNumber[i] = INT_MAX;

				//더이상 다른 숫자를 찾아볼 필요가 없다.
				break;
			}
		}
		
		//bAcc변수가 true일 경우 중복된 숫자를 입력해서 숫자를 *로 
		//바꾸지 못했으므로 다시 입력받게 continue 해준다.
		if (bAcc)
			continue;

		for (int i = 0; i < 25; ++i) {
			if (iAINumber[i] == iInput)
				iAINumber[i] = INT_MAX;
			
		}

		//ai가 선택을한다. AI가 선택하는것은 ai 모드에 따라서 달라진다.
		
		switch (iAIMode) {
			/*
			AI Easy 모드는 현재 AI 의 숫자목록중 *로 바뀌지 않은 숫자
			목록을 만들어서그 목록중 하나를 선택하게한다 (랜덤하게)
			*/
		case AM_EASY :
			//선택안된 숫자목록을 만들어준다.
			//선택안된 숫자개수는 목록을 만들때 카운팅해준다.
			iNoneSelectCount = 0;
			for (int i = 0; i < 25; ++i) {
				//현재숫자가 *이 아닐경우
				if (iAINumber[i] != INT_MAX) {

					//*이 아닌 숫자일 경우 iNoneSelectCount 를 인덱스로 활용
					//한다 .선택안된 목록에 추가할 때마다 개수를 1씩 증가
					//시켜서 총 선택안된 개수를 구해준다.
					//그런데 0부터 카운트가 시작이므로 0부터++해서 1개추가
					//되었다고 해준다.
					iNoneSelect[iNoneSelectCount] = iAINumber[i];
					++iNoneSelectCount;
				}
			}

			//for 문을 빠져나오개 되면 선택안된목록이 만들어지고
			//선택안된 목록의 개수가 만들어지게된다.
			//선택안된 목록의 숫자중 랜덤한 하나의 숫자를 얻어오기
			//위해 인덱스를 랜덤하게 구해준다.
			iInput = iNoneSelect[rand() % iNoneSelectCount];
			break;
		case AM_HARD:
			//하드모드는 현재 숫자중 빙고줄 완성 가능성이 가장 높은 줄을
			//찾아서 그 줄에 있는 숫자중 하나를 *로  만들어준다.
			int iLine=0;
			int iStarCount=0;
			int iSaveCount=0;

			//가로 세로 라인 중 가장 *이 많은 라인을 찾아낸다.
			for (int i = 0; i < 5; ++i) {
				iStarCount = 0;
				for (int j= 0; j < 5; ++j) {
					if (iAINumber[i * 5 + j] == INT_MAX)
						++iStarCount;
				}
				//별이 5개 미만이어야 빙고 줄이 아니고 기존에		가장 많은
				//라인의 별보다 커야 가장 별이 많은 라인이므로 라인을
				//교체해주고 저장된 별 수를 교체해준다.
				if (iStarCount < 5 && iSaveCount < iStarCount)//새로운 라인을 찾은것
				{ 
					iLine = i; //가로줄 몇번째 줄이 별이 가장많은가
					iSaveCount = iStarCount;
				}
			}
			//가로 라인중 가장 별이 많은 라인은 이미 구했다.
			//이 값과 세로 라인들을 비교하여 별이 가장 많은 라인을 구한다.
			for (int i = 0; i < 5; ++i) {
				iStarCount = 0;
				for (int j = 0; j < 5; ++j) {
					if (iAINumber[j * 5 + i] == INT_MAX)
						++iStarCount;
				}
				if (iStarCount < 5 && iSaveCount < iStarCount) 
				{
				//세로 라인은 5~9로 의미를 부여했다.
					iLine = i + 5;
					iSaveCount = iStarCount;
				}

			}
			iStarCount = 0;
			for (int i = 0; i < 25; i += 6)
			{
				if (iAINumber[i] == INT_MAX)
					++iStarCount;

				if (iStarCount < 5 && iSaveCount < iStarCount)
				{
					iLine = LN_LT;
					iSaveCount = iStarCount;
				}
			}
			//오른쪽 -> 왼쪽 대각선 체크
			iStarCount = 0;
			for (int i = 4; i <= 20; i += 4) {
				if (iAINumber[i] == INT_MAX)
					++iStarCount;
			}
			if (iStarCount < 5 && iSaveCount < iStarCount)
			{
				iLine = LN_RT;
				iSaveCount = iStarCount;
			}

			//모든 라인을 조사했으면 iLine 에 가능성이 가장높은 줄 번호가
			//저장되었다. 그줄에 있는 별이 아닌 숫자중 하나를 선택하게한다.
			//가로줄일 경우
			if (iLine <= LN_H5)
			{
				//가로줄일 경우 iLine이 0~4사이의 값이다
				for (int i = 0; i < 5; ++i)
				{
					//현재줄에서 *이 아닌 숫자를 찾아낸다.
					if (iAINumber[iLine * 5 + i] != INT_MAX) { //별이아닌숫자를 찾는것
						iInput = iAINumber[iLine * 5 + i];
						break;

					}

				}
			}
			else if (iLine <= LN_V5) {
				//세로줄일 경우iLine이 5~9 사이의 값이다.
				for (int i = 0; i < 5; ++i) {
					if (iAINumber[i * 5 + (iLine - 5)] != INT_MAX) {
						iInput = iAINumber[i * 5 + (iLine - 5)];
						break;
					}
				}
			}
			else if (iLine == LN_LT) {
				for (int i = 0; i < 25; i += 6) {
					if (iAINumber[i] != INT_MAX) {
						iInput = iAINumber[i];
						break;
					}
				}
			}
			else if (iLine == LN_RT) {
				for (int i = 4; i < 20; i += 4) {
					if (iAINumber[i] != INT_MAX) {
						iInput = iAINumber[i];
						break;
					}
				}
			}

			break;
		}


		//AI가 숫자를 선택했으므로 AI가 플에이어와 AI의 숫자를 *로 바꿔준다.
		for (int i = 0; i < 25; ++i) {
			if (iNumber[i] == iInput) {
				iNumber[i] = INT_MAX;
				break;
			}
		}

		//AI 숫자를 바꿔준다.
		for (int i = 0; i < 25; ++i) {
			if (iAINumber[i] == iInput) {
				iAINumber[i] = INT_MAX;
				break;
			}
		}
		Bing = 0; AIBing = 0;

		int iStar1 = 0, iStar2 = 0, iStar3 =0,iStar4= 0;
		for (int i = 0; i < 5; ++i) {
			iStar1 = iStar2 = 0;
			for (int j = 0; j < 5; ++j) {
				//가로별 개수를 구해준다
				if (iNumber[i * 5 + j] == INT_MAX)
					++iStar1;
				//세로별 개수를 구해준다.
				if (iNumber[j * 5 + i] == INT_MAX)
					++iStar2;
				//if (iAINumber[i * 5 + j] == INT_MAX)
				//++AiStar1; for 문 새로안만들고 여기에 넣어도된다.

			}
			if (iStar1 == 5)
				++Bing;

			if (iStar2 == 5)
				++Bing;
		}

			int AiStar1 = 0, AiStar2 = 0, AiStar3 = 0, AiStar4 = 0;
			for (int i = 0; i < 5; ++i) {
				AiStar1 = AiStar2 = 0;
				for (int j = 0; j < 5; ++j) {
					//가로별 개수를 구해준다
					if (iAINumber[i * 5 + j] == INT_MAX)
						++AiStar1;
					//세로별 개수를 구해준다.
					if (iAINumber[j * 5 + i] == INT_MAX)
						++AiStar2;
				}
				if (AiStar1 == 5)
					++AIBing;

				if (AiStar2 == 5)
					++AIBing;
			}
			//j for문을 빠져나오고 나면 현재 줄의 가로 별 개수가 몇개인지
			//iStar1변수에 들어가게 된다. iStar1이 값이 5이면 한줄이 
			//모두 *이라는 의미이므로 빙고 줄 카운트를 추가해준다.
			

		

		

		//왼쪽 상단에서 오른쪽 하단 대각선 체크
		
		for (int k=0; k < 5; ++k)
			if (iNumber[6 * k] == INT_MAX)
				++iStar3;

		if (iStar3 == 5)
			++Bing;
		
		for (int k = 1; k < 6; ++k)
			if (iNumber[4 * k] == INT_MAX)
				++iStar4;

		if (iStar4 == 5)
			++Bing;
		//============================================
		for (int k = 0; k < 5; ++k) {
			if (iAINumber[6 * k] == INT_MAX)
				++AiStar3;
		}
		if (AiStar3 == 5)
			++AIBing;

		for (int k = 1; k < 6; ++k) {
			if (iAINumber[4 * k] == INT_MAX)
				++AiStar4;
		}
		
		if (AiStar4 == 5)
			++AIBing;

	}
		return 0;
}// 19강 들으면된다,