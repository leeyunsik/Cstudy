

//#include : 헤더 파일을 여기에 포함 시키는 기능
#include<iostream>
using namespace std;
// C++의 시작점은 main함수이다 .main함수는 반드시 있어야 한다.
//C++표준 기능의 대부분은  std라는 namespace 안에 존재하고 있다. 이름이 겹치는
//방지 해주기 위해서다
//endl 개행기능 줄바꿈 기능이다
int main() {
	
	std::cout << "안녕\n";
	cout << "안녕";
	
	/*
	변수: 변하는 수. 값이 바뀔 수 있다.
	용량의 최소단위:bit
	1byte= 8bit
	1kbyte= 1024byte
	1mbyte=1023kbte
	1gbyte = 1024mbyte
	1tbyte= 1024gbyte

	문자를 표현하는 방법 : ASCII 코드 표를 가지고 있다.실제 저장은 숫자로 하는데 
						   65면 65에해당하는 표가 정의되어 있는것
	false :0
	true :0이아닌 모든수
	unsigned :부호가없다.
	종류	|	용량	|	데이터	|	표현범위	|	unsigned	|
	char	|	1byte	|	문자	|	-128~127	|	0~255		|
	bool	|	1byte	|	참/거짓	|	true/false	|	true/false	|
	short	|	2byte	|	정수	|  -32768~32767	|	0~65535		|
	int		|	4byte	|	정수	|  약 -22억~21억|	0~약43억	|
	float	|	4byte	|	실수	| 
	double	|	8byte	|	실수	|

	진수 : 2진수,8진수,10진수,16진수

	2진수 : 0~1
	8진수 : 0~7
	10진수 :0~9
	16진수 : 0~15 :0~9,10~15 :a~f
	진수들은 서로 다른 진수로 변환이 가능하다.
	87 2진수 변환법

	87/2 =43 --1
	43/2 =21 --1
	21/2 =10 --1
	10/2 =5  --0
	5/2 =2 ----1
	2/2 =1 ----0
	가장 마지막에 나온 몫부터 역순으로 나머지 값들을 읽는다 그럼 1010111이 된다

	16진수로 변환. 10진수를 바로 16진수로 변환하는것 보다 2진수로 변환한 후에
	16진수로 변환하는것이 쉽다.

	1010111을 오른쪽으로부터 4자리씩 끊어서 계산한다
	0101	0111
	8421    8421

	5		7 =16진수57


	비트단위논리연산자 :2진수 단위의 연산을 한다. 값 대 값을 연산하여 값으로 나온다.
	종류 :AND(&) OR(|) NOT(~) XOR(^둘이 같을때 false 다르면true다를떄만 참)
	A	B	XOR	
	0	0	0
	1	0	1
	0	1	1
	1	1	0

	*/
	// = : 대입연산자이다. 오른쪽에 있는 값을 왼쪽으로 대입한다.
	int	 Number = 10;
	Number = 20;
	cout << Number << endl;

	bool bTest = true;
	bTest = false;
	cout << bTest << endl;

	//영문이나 숫자는1byte를 차지한다. 하지만 한글이나 한문등의 문자들은 2byte를 차지하기
	//때문에 char 변수 하나에 저장할시 힘들다.
	char  cTest = 't';

	cout << cTest << endl;

	float fNumber = 3.14f;

	cout << fNumber << endl;

	double dNumber = 123.4567;

	cout << dNumber << endl;

	cin >> Number;

	cout << (10 <= Number || Number <= 20);
	return 0;

	
}1~4


-----------------------------------------------------------------------------------------


#include <iostream>

using namespace std;

/*
열거체 : 연속된 숫자에 이름을 부여할 수 있는 기능이다.
enum 열거체면 {} 의 형태로 구성된다.
열거체명을 이용해서 열거체 타입의 변수를 선언도 가능하다.
즉, 열거체 자체가 사용자 정의 변수 타입이 될 수도있다.
*/
enum NUM
{
	NUM_0, // 아무것도 부여하지 않을 경우 0부터 1씩 차례로 값이 부여된다.
	NUM_1, // 10 넣으면 다음께 11이 된다
	NUM_2,
	NUM_3

};

#define NUM_4 4
// #붙은거는 전처리기
int main() {

	/*
	switch 문: 분기문의 한 종류이다.if문이 조건을 체크하는 분기문이라면
	switch문은 값이 뭔지를 체크하는 분기문이다.
	형태 : switch(변수) {} 의 형태로 구성된다. 코드블럭 안에는 case break 구문이
	들어가게 된다. case 상수: 의 형태로 처리가 되고 변수값이 무엇인지에 따라서
	case 뒤에 오는 상수를 비교하게 된다.
	*/
	int iNumber;
	cout << "숫자를 입력하세여";
	cin >> iNumber;

	switch (iNumber)
	{
	case NUM_1: //iNumer 값이 무엇인지에 따라서 실행되는 case 구문이 결정된다.
		break; // break 를 만나게 되면 switch 문을 빠져나가게 된다.
	case 2:
		//여기처럼 break가 없을 경우 바로 아래에 있는 case 구문도 강제로
		//실행이 되게된다.

	default: //csae로 지정되지 않는 숫자가 들어올 경우 실행된다.if문의 else
		break;
	}
	NUM eNum = (NUM)10; //열거체 타입의 변수를 선언했다. 열거체 타입 변수는 무조건
			//4byte를 차지하게 된다. 열거체를 이용해서 선언한 변수는
			//값의 표현 범위가 열거체에 나열된 값들 안에서 선택해서 사용한다.

	cout << sizeof(NUM) << endl;
	//sizeof(타입 or 변수)를 하게 되면 해당 타입 혹은 변수의 메모리
	   //크기를 구해준다.
	cout << typeid(NUM).name() << endl;
	//typeid(타입 or 변수).name() 을 하게 되면 typeid 안에 들어간 타입
	//혹은 변수의 타입을 문자열로 반환해준다.

/*
반복문 : 특정 작업을 반복해서 수행해주는 기능이다.
종류 : for,while,do while 3종류가 존재한다.
while(조건식){} 의 형태로 구성된다.
while 문은 조건식을 체크해서 true일 경우 코드블럭 안의 코드가 동작되고 다시
조건식을 체크한다. 조건식이 false가 되면 while문으 빠져나오게 된다.
반복문 안에서 break를 만나게 되면 해당 반복문을 빠져나오게 된다.
*/
	//system("cls"); //화면을 깨끗히 지워준다.
	//system("pause"); //일시정지
	//continue;/반복문의 시작점으로 이동시켜주는 기능이다.

	/*
	for 문 : 반복문의 한 종류이다.
	형태 : for(초기값; 조건식; 증감값) {} 의 형태로 구엇이된다.
	조건식이 true 이면 코드블럭의 코드가 동작된다.
	무한루프를 돌릴떄는 for (;;) {} 을 해주면 무한으로 돌아가게 된다.
	for 문에서 초기값은 처음 for 문에 진입할 때 딱 한번만 동작된다. 그후에 조건식을
	체크하고 조건식이 true 이면 코드블럭의 코드가 동작된 후에 증감값을 처리한다.
	그후 다시 조건을 체크하고 true 면 동작되고 증감 > 조건 >증감 > 조건의 순서로 처리가
	되다 조건이 false 이거나 break 를 만나게 되면 for 문을 빠져나가게 된다.
	*/
	for (int i = 5; i > 0; i--)
	{
		for (int j = 0; j < i; j++)
		{
			cout << " ";
		}

		for (int k = i * 2; k <= 10; k++)
		{
			cout << "*";
		}
		cout << endl;
	}

	/*
	do while 문 : 반복문의 한 종류이다.
	형태 : do {}while(조건식); 의 형태로 구성된다. while 문은 처음
	진입부터 조건식을 체크하지만 do while  문은 처음 한번은 무조건 동작이 되고
	그 후에 조건식을 체크해서 true 일 경우 동작되는 반복문이다.
	*/

	int  isNumber = 0;

	do {
		cout << isNumber << endl;
	} while (isNumber > 0);

	/*
	배열 : 여러개의 변수를 한번에 생성해 줄 수 있는 기능이다.
	형태 : 변수타입 배열명[개수]; 의 형태로 선언할 수 있다.
	배열의 특징 : 배열은 연속된 메모리 블럭에 공간이 할당된다.
	*/
	//배열뿐만 아니라 일반 변수들도 선언을 하고 값을 초기화하지 않을 경우 쓰레기 값이
	//들어가게된다.
	int iArray[10] = { 1,2,3,4,5}; // 40바이트 5~9까지는 0이들어간다
	//int iArray[10] ={} 하면 모든 인덱스를 0으로 초기화한다.
	iArray[1] = 1234;

	system("cls");

	//로또 프로그램
	int iLotto[45];
	for (int i = 0; i < 6; ++i) {
		cout << rand() % 45 + 1 << endl;
	}// 이러면 중복된 값이 나와서 다르게 만들어야함

	int iLotto1[45] = {};

	for (int i = 0; i < 45; ++i) {
		iLotto1[i] = i + 1;
	}
	//Swap 알고리즘
	int iNum1 = 1, iNum2 = 2, iNum3 = 3;
	/*iNum3 = iNum1;
	iNum1 = iNum2;
	iNum2 = iNum3;*/

	//Shuffle 
	int iTemp, idx1, idx2;
	//100번정도 골고루 섞어준다.
	for (int i = 0; i < 100; ++i) {
		idx1 = rand() % 45;
		idx2 = rand() % 45;

		iTemp = iLotto1[idx1];
		iLotto1[idx1]= iLotto1[idx2];
		iLotto1[idx2] = iTemp;
	}

	for (int i = 0; i < 45; ++i) {
		cout << iLotto1[i] << endl;
	}
	return 0;//14강듣기  
}


--------------------------------------------------------------------#include <iostream>

using namespace std;

#define NAME_SIZE 32
/*
구조체 : 관련있는 변수들을 모아서 하나의 새로운 타입을 만들어주는 기능이다.
사용자정의 변수 타입니다.
형태 : struct 구조체명 {}; 의 형태로 구성된다.
배열과 구조체의 공통점 
1. 데이터 집합이다.
2. 연속된 메모리 블럭에 할당된다, 구조체 멤버들은 연속된
메모리 블럭으로 잡히게 된다.
*/

struct _tagStudent {
	char strName[NAME_SIZE];
	int iNumber;
	int iKor;
	int iEng;
	int iMath;
	int iTotal;
	float fAvg;
};

int main() {

	_tagStudent tStudent;
	_tagStudent tStudentArr[100] = {}; //5200바이트
	char a[10] ="asd";
	//구조체 멤버에 접근할때는 . 을이용해서 접근하게된다.
	tStudent.iKor = 100;

	//tStudent.strName = "asdasd";
	//문자열을 배열에 넣어줄 때는 단순 대입으로는 불가능하다.
	// strcpy_s 라는 함수를 애용해야 문자열을 복사해 주어야한다.
	//이함수는 오른쪽에 있는 문자열을 왼쪽으로 복하새준다.
	//문자열의 끝은 항상 0(NULL)로 끝나야 한다. 그런데 쓰레기 값이
	//들어가 있는 상태에서 아래처럼 각 배열 요소에 값을 넣어주게 되면
	//그 값이 출력되고 넣어주지 않은 부분은 쓰레기 값으로 그대로 출력
	//된다. 왜냐면 출력할때 문자열의 끝을 인식할 수 없기
	//때문이다 0이 들어가야하는데 쓰레기 값이 들어가 있기 때문이다.
	strcpy_s(tStudent.strName, "가나다라 asdf");

	//strcat_s 함수는 문자열을 붙여주는 기능이다.
	//오른쪽에 있는 문자열을 왼쪽에 붙여준다. strName에는 위에서
	// 가나다라asdf를 저장해 두었기 떄문에 이뒤에 오른쪽 문자열을 붙여서
	//만들어준다.
	strcat_s(tStudent.strName, "문자열 붙이기");

	//strcmp 함수는 두 문자열을 비교하여 같을 경우  0을 반환하고 다를 경우
	//0이 아닌 값을 반환한다.
	strcpy_s(tStudent.strName, "홍길동");

	cout << "비교할 이름을 입력하세여 :";
	char strName[NAME_SIZE] = {};
	cin >> strName;
	if (strcmp(tStudent.strName, strName) == 0) {
		cout << "학생을 찾았습니다" << endl;
	}
	else
		cout << "찾은 학생이 없습니다." << endl;



	cout << "이름길이 :" << strlen(tStudent.strName) << endl;
	cout << "d이름" << tStudent.strName << endl;
	cout << "학번" << tStudent.iNumber << endl;
	cout << a;
	return 0;
} 20강

----------------------------------------------------------------------------


























